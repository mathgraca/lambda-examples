AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Convert file in S3
Globals:
  Function:
    Timeout: 3

Parameters:
  AppStage:
    Type: String
    Default: api
    Description: Prefixo do endpoint 
    AllowedPattern: ^[A-Za-z]+$
    MaxLength: 10
    MinLength: 1
    ConstraintDescription: "1- 10 latin letters"

  UploadLimitInMb:
    Type: Number 
    Default: 5
    Description: Maximum upload size in megabytes
    MinValue: 1
    MaxValue: 100

Resources:
  UploadS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  WebApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref AppStage

  ThumbnailsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ConvertFunctionCanReadUploads:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ConvertFunctionCanReadUploads
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "${UploadS3Bucket.Arn}/*"
      Roles:
        - !Ref ConvertFileFunctionRole

  ShowFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-form/
      Handler: show-form.lambdaHandler
      Runtime: nodejs10.x
     # AutoPublishAlias: pegue
     # DeploymentPreference:
     #   Type: Linear10PercentEvery1Minute
     #    Alarms:
     #     - !Ref HelloWorldError
      Events:
        ShowForm:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: !Ref WebApi
      Environment: 
        Variables:
          UPLOAD_S3_BUCKET: !Ref UploadS3Bucket
          UPLOAD_LIMIT_IN_MB: !Ref UploadLimitInMb
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref UploadS3Bucket

  ConfirmUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user-form/
      Handler: confirm-upload.lambdaHandler
      Runtime: nodejs10.x
      Events:
        ConfirmForm:
          Type: Api
          Properties:
            Path: /confirm
            Method: get
            RestApiId: !Ref WebApi
      Environment:
        Variables:
          UPLOAD_S3_BUCKET: !Ref ThumbnailsS3Bucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref ThumbnailsS3Bucket

  ConvertFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image-conversion/
      Handler: index.handler
      Runtime: nodejs10.x
      Events:
        FileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref UploadS3Bucket
            Events: s3:ObjectCreated:*
      Timeout: 600
      Environment:
        Variables:
          OUTPUT_BUCKET: !Ref ThumbnailsS3Bucket
      Policies:
        - S3FullAccessPolicy:
            BucketName: !Ref ThumbnailsS3Bucket

  HelloWorldError:
    Type: AWS::CloudWatch::Alarm 
    Properties:
      MetricName: Errors
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 5
      Period: 60
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Namespace: "AWS/Lambda"
      Dimensions:
        - Name: FunctionName
          Value: !Ref ShowFormFunction
  ErrorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user-form/
      Handler: app.lambdaError
      Runtime: nodejs10.x
      AutoPublishAlias: pegue
      # DeploymentPreference:
      #  Type: Linear10PercentEvery1Minute
      #  Alarms:
      #    - !Ref HelloWorldError
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /error
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UserFormApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${WebApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/"
  UploadBucket:
    Description: "S3 Bucket Information"
    Value: !Ref UploadS3Bucket
  ShowFormFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ShowFormFunction.Arn
  ShowFormFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ShowFormFunctionRole.Arn
